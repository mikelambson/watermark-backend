generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["config", "auth",  "legacy", "maint", "ops", "analysis", "public", "timeseries"]
  extensions = [pgcrypto]
}

model Users {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  login        String   @unique @db.VarChar
  password     String   @db.VarChar
  fullname     String?  @db.VarChar
  email        String?  @db.VarChar
  title        String?  @default("user") @db.VarChar
  tcid_staff   Boolean? @default(false)
  protected    Boolean  @default(false)
  active       Boolean  @default(true)
  roleId       UserRoles[]
  

  @@schema("auth")
}

model Roles {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @unique @db.VarChar
  users       UserRoles[]
  
  @@schema("auth")
}

model UserRoles {
  user        Users @relation(fields: [userId], references: [id])
  userId      String @db.Uuid
  role        Roles @relation(fields: [roleId], references: [id])
  roleId      String @db.Uuid
  assignedAt  DateTime @default(now())
  assignedBy  String

  @@id([userId, roleId])

  @@schema("auth")
}

model LegacyOrders {
  id              Int @id @default(autoincrement())
  orderTimestamp  DateTime?
  orderNumber     Int @unique
  tcidSn          String?
  district        String?
  status          String?
  laterals        String[]
  approxCfs       Float?
  approxHrs       Float?
  phoneNumbers    String[]
  remarks         String?
  details         Json?
  scheduled       Boolean @default(false)
  schedule        Schedule[]
  deliveries      Deliveries[]
  

  @@schema("legacy")
  @@index([status], name: "status_index")
  @@index([orderTimestamp], name: "order_timestamp_index")
  @@index([orderNumber], name: "order_number_index")
  @@index([tcidSn], name: "tcid_sn_index")
}

model Schedule {
  scheduledDate       DateTime
  orderId             Int
  scheduledLine       String?
  scheduledHead       Int?
  travelTime          Int @default(0)
  dropIn              Boolean? @default(false)
  instructions        String?
  watermasterNote     Json?
  specialRequest      String?
  
  legacy              LegacyOrders @relation(fields: [orderId], references: [orderNumber])
  
  @@id([orderId])
  @@schema("ops")
  @@index([scheduledDate])
}



model HeadSheets {
  id              Int @id @default(autoincrement())
  name            String
  maxHeads        Int
  structureRef    String?
  maxFlow         Int?
  characteristics Json?
  

  @@schema("ops")

}

model Deliveries {
  id                Int @id @default(autoincrement())
  scheduledOrder    LegacyOrders @relation(fields: [orderId], references: [orderNumber])
  orderId           Int
  startTime         DateTime
  stopTime          DateTime?
  measurement       Measurements[]
  deliveryNote      String?



  @@schema("ops")
}

model Measurements {
  id                Int @id @default(autoincrement())
  scheduledOrder    Deliveries @relation(fields: [deliveryId], references: [id])
  deliveryId        Int
  startTime         DateTime
  stopTime          DateTime?
  measurement       Int
  measurementType   String @default("estimation")
  measurementNote   String?

  @@schema("ops")
}